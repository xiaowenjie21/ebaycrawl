include "application"

akka.cluster.min-nr-of-members = 3

akka.cluster.role {
  frontend.min-nr-of-members = 1
  backend.min-nr-of-members = 2
}

//// 配置一个dispatcher
//my-dispatcher {
//  # Dispatcher is the name of the event-based dispatcher
//  type = Dispatcher
//  # What kind of ExecutionService to use
//  executor = "fork-join-executor"
//  # Configuration for the fork join pool
//  fork-join-executor {
//    # Min number of threads to cap factor-based parallelism number to
//    parallelism-min = 100
//    # Parallelism (threads) ... ceil(available processors * factor)
//    parallelism-factor = 400
//    # Max number of threads to cap factor-based parallelism number to
//    parallelism-max = 1000
//  }
//  # Throughput defines the maximum number of messages to be
//  # processed per actor before the thread jumps to the next actor.
//  # Set to 1 for as fair as possible.
//  throughput = 100
//}



// 第一个配置的路径是前端，无集成akka http
akka.actor.deployment {
  /EbayCrawlFrontend/EbayCrawlBackendRouter = {
    router = cluster-metrics-adaptive-group
    metrics-selector = mix
    routees.paths = ["/user/EbayCrawlBackend"]
    cluster {
      enabled = on
      use-role = backend
      allow-local-routees = off
    }
  }
}

// 第二个路径配置集成了akka http
akka.actor.deployment {
  /httpfrontend/CrawlBackendRouter = {
//    dispatcher = my-dispatcher
    router = cluster-metrics-adaptive-group
    metrics-selector = mix
    routees.paths = ["/user/EbayCrawlBackend"]
    cluster {
      enabled = on
      use-role = backend
      allow-local-routees = off
    }
  }
}

